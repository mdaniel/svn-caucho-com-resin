#!@BASH@

### BEGIN INIT INFO
# Provides:          resin
# Required-Start:    $remote_fs $network
# Required-Stop:     $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: The Resin Java Application Server
### END INIT INFO
#
### BEGIN Fedora SysV
#
# chkconfig: 2345 90 10
# description: The Resin Java Application Server
#
### END Fedora SysV
#
# To install, configure this file as needed and copy init.resin
# to /etc/rc.d/init.d as resin.  Then use "# /sbin/chkconfig resin reset"
#

#JAVA_HOME="@JAVA_HOME@"
RESIN_HOME="@resin_home@"
CONSOLE="@resin_log@/console.log"

#export JAVA_HOME RESIN_HOME
export RESIN_HOME

JAVA="@JAVA_EXE@"

if test -z "$JAVA_EXE"; then
  JAVA_EXE="$JAVA"
fi

if test ! -x "$JAVA_EXE"; then
  if test -n "$JAVA_HOME"; then
    JAVA_EXE="$JAVA_HOME/bin/java"
  fi
fi

if test ! -x "${JAVA_EXE}"; then
  JAVA_EXE=java
fi

RESIN_EXE="${RESIN_HOME}/bin/resinctl"

if ! test -f "${RESIN_EXE}"; then
  RESIN_EXE="${JAVA_EXE} -jar ${RESIN_HOME}/lib/resin.jar"
fi

#
# Set to the server id to start and use "start" command instead of
# "start-all"
#
#SERVER="-server app-a"
#START_CMD="start"

START_CMD="start-all"

#
# -resin-root /var/resin         -- the main data directory
#
#RESIN_ROOT="-root-directory @resin_root@"
#
# -conf /etc/resin/resin.xml   -- the main configuration file
#
#RESIN_CONF="-conf @resin_conf@/resin.xml"
# 
# Licenses for Resin. TODO in progress
# RESIN_LICENSE=" -license-directory @resin_conf@/licenses "
#
# -log-directory /var/log/resin -- the main log directory
#
#RESIN_LOG="--log-directory @resin_log@"
#
# -join-cluster app-tier        -- elastic servers
#
#JOIN_CLUSTER="--join-cluster app-tier"

ARGS="$ARGS $RESIN_CONF $RESIN_LOG $RESIN_ROOT $RESIN_LICENSE"
ARGS="$ARGS $JOIN_CLUSTER $SERVER"

#START_ARGS="$START_ARGS --elastic-ip"

if test -r /lib/lsb/init-functions; then
  . /lib/lsb/init-functions
fi

type log_daemon_msg 1> /dev/null 2> /dev/null
if test "$?" != 0; then
  log_daemon_msg () {
      if [ -z "$1" ]; then
          return 1
      fi

      if [ -z "$2" ]; then
          echo -n "$1:"
          return
      fi
    
      echo -n "$1: $2"
  }
fi  

type log_end_msg 1> /dev/null 2> /dev/null
if test "$?" != 0; then
  log_end_msg () {
      [ -z "$1" ] && return 1

      if [ $1 -eq 0 ]; then
        echo " ."
      else
        echo " failed!"
      fi
    
    return $1
  }

fi

case "$1" in
  start)
	log_daemon_msg "Starting resin"
	if test -n "$USER"; then
  	  su $USER -c """$RESIN_EXE $ARGS $START_ARGS $START_CMD""" 1>> $CONSOLE 2>> $CONSOLE
	else
	    errors=`$RESIN_EXE $ARGS $START_CMD 2>&1`
	    if [ $? != 0 ]; then
		log_daemon_msg $errors
	    fi
	fi

	log_end_msg $?
	;;
  stop)
	log_daemon_msg "Stopping resin"
	if test -n "$USER"; then
  	  su $USER -c """$RESIN_EXE $ARGS shutdown""" 1>> $CONSOLE 2>> $CONSOLE
	else
	    errors=`$RESIN_EXE $ARGS shutdown 2>&1`
	    if [ $? != 0 ]; then
		log_daemon_msg $errors
	    fi
	fi
	
	log_end_msg $?
	;;
  status)
        $RESIN_EXE $ARGS status || exit 3
	;;
  restart)
	$0 stop
	$0 start
	;;
  *)
	echo "Usage: $0 {start|stop|status|restart}"
	exit 1
esac

exit 0
