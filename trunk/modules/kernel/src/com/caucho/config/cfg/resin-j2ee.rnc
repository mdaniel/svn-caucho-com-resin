default namespace r = "http://caucho.com/ns/resin"
namespace local = ""

namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"

r_any = text | (attribute * {string} | element * { r_any })*

r_data-source = element data-source {
  attribute id { string }?,
  r_description-Group,

  (attribute name { string }
   | element name { string })?,

  (attribute class-name { string }
   | element class-name { string })?,

  (attribute server-name { string }
   | element server-name { string })?,

  (attribute port-number { string }
   | element port-number { string })?,

  (attribute database-name { string }
   | element database-name { string })?,
   
  (attribute url { string }
   | element url {string })?,

  (attribute user { string }
   | element user { string })?,

  (attribute password { string }
   | element password { string })?,

  element property { r_property-Type } *,

  (attribute login-timeout { string }
   | element login-timeout { string })?,

  (attribute transactional { string }
   | element transactional { string })?,

  (attribute isolation-level { string }
   | element isolation-level { string })?,
   
  (attribute initial-pool-size { string }
   | element initial-pool-size { string })?,
   
  (attribute max-pool-size { string }
   | element max-pool-size { string })?,
   
  (attribute min-pool-size { string }
   | element min-pool-size { string })?,

  (attribute max-idle-time { string }
   | element max-idle-time { string })?,

  (attribute max-statements { string }
   | element max-statements { string })?
}

r_deployment-extension = element deployment-extension {
  attribute namespace { string },

  attribute mustUnderstand { r_boolean-Type }?,

  r_extension-element*
}

r_description = element description {
  attribute xml:lang { string }?,

  string
}

r_description-Group =
  (r_description*,

   r_display-name?,

   r_icon?)

r_dewey-version = string

r_display-name = element display-name {
  attribute xml:lang { string }?,

  string
}

r_ejb-link = element ejb-link {
  string
}

r_ejb-local-ref = element ejb-local-ref {
  r_description*

  & r_ejb-ref-name

  & r_ejb-ref-type?

  & r_foreign-name?

  & r_local-home?

  & r_local?

  & r_ejb-link?

  & r_deployment-extension*
}

r_ejb-ref = element ejb-ref {
  r_description*

  & r_ejb-ref-name

  & r_ejb-ref-type?

  & r_foreign-name?

  & r_home?

  & r_remote?

  & r_ejb-link?

  & r_deployment-extension*
}

r_ejb-ref-name =
  attribute ejb-ref-name { r_jndi-name-Type }
  | element ejb-ref-name { r_jndi-name-Type }

r_ejb-ref-type = element ejb-ref-type {
  "Entity" | "Session"
}

r_env-entry = element env-entry {
  attribute id { string }?,

  r_description*,

  r_env-entry-name,

  r_env-entry-type?,

  r_env-entry-value?,

  r_resource-Group-Value
}

r_env-entry-name =
  attribute env-entry-name { r_jndi-name-Type }
  | element env-entry-name { r_jndi-name-Type }

r_env-entry-type =
  attribute env-entry-type { r_env-entry-type-Type }
  | element env-entry-type { r_env-entry-type-Type }

r_env-entry-type-Type = 
  "java.lang.Boolean"
  | "java.lang.Byte"
  | "java.lang.Character"
  | "java.lang.String"
  | "java.lang.Short"
  | "java.lang.Integer"
  | "java.lang.Long"
  | "java.lang.Float"
  | "java.lang.Double"

r_env-entry-value =
  attribute env-entry-value { string }
  | element env-entry-value { string }

r_extension-element = element extension-element {
  r_any
}

r_foreign-name =
  attribute foreign-name { string }
  | element foreign-name { string }

r_fully-qualified-class = string

r_home = element home {
  r_fully-qualified-class
}

r_icon = element icon {
  attribute xml:lang { string }?,

  element small-icon { r_path-Type }?,

  element large-icon { r_path-Type }?
}

r_injection-target = element injection-target {
  element injection-target-class { string },

  element injection-target-name { string }
}

r_java-identifier = string

r_jndi-name-Type = string

r_local = element local {
  r_fully-qualified-class
}

r_local-home = element local-home {
  r_fully-qualified-class
}

r_lookup-name = element lookup-name {
  string
}

r_mapped-name = element mapped-name {
  string
}

r_message-destination = element message-destination {
  r_description*

  & r_display-name*

  & r_icon*

  & r_message-destination-name

  & r_deployment-extension*

  & r_mapped-name
}

r_message-destination-link = element message-destination-link {
  r_fully-qualified-class
}

r_message-destination-name = element message-destination-name {
  string
}

r_message-destination-ref = element message-destination-ref {
  r_description*

  & r_message-destination-ref-name

  & r_message-destination-ref-type

  & r_message-destination-ref-usage

  & r_message-destination-link?

  & r_deployment-extension*

  & r_foreign-name?
}

## XXX:??

r_message-ref = element message-ref {
  empty
}

r_message-destination-ref-name = element message-destination-ref-name {
  string
}

r_message-destination-ref-type = element message-destination-ref-type {
  r_fully-qualified-class
}

r_message-destination-ref-usage = element message-destination-ref-usage {
  "Consumes"
  | "Produces"
  | "ConsumesProduces"
}

r_param-name = element param-name {
  r_string
}

r_param-value = element param-value {
  string
}

r_param-value-Type =
  r_description*,

  r_param-name,

  r_param-value

r_persistence-unit-ref = element persistence-unit-ref {
  attribute id { string }?

  & r_description-Group

  & (attribute persistence-unit-ref-name { string }
     | element persistence-unit-ref-name { string })

  & (attribute persistence-unit-ref { string }
     | element persistence-unit-ref { string })

  & r_resource-Group
}

r_remote = element remote {
  r_fully-qualified-class
}

r_res-auth = element res-auth {
  "Application" | "Container"
}

r_res-sharing-scope = element res-sharing-scope {
  "Shareable" | "Unshareable"
}

r_res-type = element res-type {
  r_fully-qualified-class
}

r_resource-Group =
  r_data-source*

  & r_ejb-ref*

  & r_env-entry*

  & r_resource-ref*

  & r_resource-env-ref*

  & r_message-ref*

  & r_message-destination-ref*

  & r_persistence-unit-ref*

r_resource-Group-Value =
  r_mapped-name?,

  r_injection-target*,
  
  r_lookup-name*

r_resource-env-ref = element resource-env-ref {
  r_description*,

  r_resource-env-ref-name,

  r_resource-env-ref-type,

  r_deployment-extension*
}

r_resource-env-ref-name = element resource-env-ref-name {
  r_jndi-name
}

r_resource-env-ref-type = element resource-env-ref-type {
  r_fully-qualified-class
}

r_resource-ref = element resource-ref {
  attribute id { string }?,

  r_description*,

  r_res-ref-name,

  r_res-type,

  r_res-auth,

  r_res-sharing-scope?,

  r_deployment-extension*
}

r_res-ref-name = element res-ref-name {
  string
}

r_role-name =
  attribute role-name { string }
  | element role-name { string }

r_role-link =
  attribute role-link { string }
  | element role-link { string }

r_run-as = element run-as {
  attribute id { string }?,

  r_description*,

  r_role-name,

  r_role-link?
}

r_security-role = element security-role {
  attribute id { string }?,

  r_description*,

  r_role-name,

  r_role-link?
}

r_security-role-ref = element security-role-ref {
  attribute id { string }?,

  r_description*,

  r_role-name,

  r_role-link?
}

r_service-ref = element service-ref { empty }

r_service-ref-Group =
  r_service-ref*

r_string = string

r_true-false = "true" | "false"

r_war-path = string
